create table "public"."category" (
                                     "id" integer generated by default as identity not null,
                                     "name" text not null,
                                     "created_at" timestamp with time zone not null,
                                     "updated_at" timestamp with time zone not null
);

alter table "public"."category" alter column "created_at" set default now();

alter table "public"."category" alter column "updated_at" set default now();

alter table "public"."category" enable row level security;

CREATE UNIQUE INDEX category_id_key ON public.category USING btree (id);

CREATE UNIQUE INDEX category_name_key ON public.category USING btree (name);

CREATE UNIQUE INDEX category_pk ON public.category USING btree (id);

alter table "public"."category" add constraint "category_pk" PRIMARY KEY using index "category_pk";

alter table "public"."category" add constraint "category_id_key" UNIQUE using index "category_id_key";

alter table "public"."category" add constraint "category_name_key" UNIQUE using index "category_name_key";

/* Check for length between 3 and 30 */
alter table "public"."category" add constraint "check_name" CHECK ((name ~* '^[\u00C0-\u017Fa-zA-Z0-9 ]{3,30}$'::text)) not valid;

alter table "public"."category" validate constraint "check_name";

grant delete on table "public"."category" to "anon";

grant insert on table "public"."category" to "anon";

grant references on table "public"."category" to "anon";

grant select on table "public"."category" to "anon";

grant trigger on table "public"."category" to "anon";

grant truncate on table "public"."category" to "anon";

grant update on table "public"."category" to "anon";

grant delete on table "public"."category" to "authenticated";

grant insert on table "public"."category" to "authenticated";

grant references on table "public"."category" to "authenticated";

grant select on table "public"."category" to "authenticated";

grant trigger on table "public"."category" to "authenticated";

grant truncate on table "public"."category" to "authenticated";

grant update on table "public"."category" to "authenticated";

grant delete on table "public"."category" to "service_role";

grant insert on table "public"."category" to "service_role";

grant references on table "public"."category" to "service_role";

grant select on table "public"."category" to "service_role";

grant trigger on table "public"."category" to "service_role";

grant truncate on table "public"."category" to "service_role";

grant update on table "public"."category" to "service_role";

create policy "Enable delete for trader only"
on "public"."category"
as permissive
for delete
to trader
using (true);


create policy "Enable insert for trader only"
on "public"."category"
as permissive
for insert
to trader
with check (true);


create policy "Enable read access for all authenticated users"
on "public"."category"
as permissive
for select
                      to authenticated
                      using (true);


create policy "Enable update for trader only"
on "public"."category"
as permissive
for update
               to trader
               using (true)
    with check (true);


alter table "public"."image" add constraint "image_category_id_fk" FOREIGN KEY (category_id) REFERENCES category(id) not valid;

alter table "public"."image" validate constraint "image_category_id_fk";